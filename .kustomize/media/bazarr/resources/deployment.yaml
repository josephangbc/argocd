apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: bazarr
    app.kubernetes.io/name: bazarr
  name: bazarr
  namespace: media
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: bazarr
      app.kubernetes.io/name: bazarr
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: bazarr
        app.kubernetes.io/name: bazarr
    spec:
      containers:
      - env:
        - name: TZ
          value: Asia/Singapore
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: UMASK
          value: "002"
        image: hotio/bazarr:latest
        imagePullPolicy: IfNotPresent
        # livenessProbe:
        #   failureThreshold: 5
        #   httpGet:
        #     path: /
        #     port: 9696
        #     scheme: HTTP
        #   initialDelaySeconds: 10
        #   periodSeconds: 10
        #   successThreshold: 1
        #   timeoutSeconds: 5
        name: bazarr
        ports:
        - containerPort: 6767
          name: main
          protocol: TCP
        # readinessProbe:
        #   failureThreshold: 5
        #   httpGet:
        #     path: /
        #     port: 9696
        #     scheme: HTTP
        #   initialDelaySeconds: 10
        #   periodSeconds: 10
        #   successThreshold: 2
        #   timeoutSeconds: 5
        resources:
          limits:
            cpu: 4000m
            memory: 8Gi
          requests:
            cpu: 10m
            memory: 50Mi
        startupProbe:
          failureThreshold: 60
          initialDelaySeconds: 10
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: 6767
          timeoutSeconds: 2
        volumeMounts:
        - mountPath: /config
          name: config
          subPath: bazaar
        - mountPath: /bazarr
          name: data
          subPath: library/bazarr
        - mountPath: /tv
          name: data
          subPath: library/tv
        - mountPath: /movies
          name: data
          subPath: library/movies
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: config
      - name: data
        persistentVolumeClaim:
          claimName: data
